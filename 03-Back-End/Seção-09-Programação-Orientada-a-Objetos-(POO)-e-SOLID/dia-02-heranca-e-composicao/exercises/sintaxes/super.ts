// Super
// Sempre que voc√™, na subclasse, queira referenciar a superclasse, poder√° utilizar a palavra reservada super. Super bacana, n√©? ü§£

// Deixando a gracinha de lado, vamos a um exemplo que n√£o funciona:

class Animal {
  constructor(protected birthDate: Date) { }
}
class Bird extends Animal {
  constructor(public name: string) { } // ERRO: constructor deve respeitar o contrato da superclasse
}

// Em TypeScript, o m√©todo construtor de uma subclasse deve ser o mesmo da superclasse 
// (os exemplos anteriores funcionaram pois n√£o tinham o construtor), ou deve chamar o da superclasse.

// Agora vamos a um exemplo que funciona:

class Animal {
  constructor(protected birthDate: Date) { }
}
class Bird extends Animal {
  constructor(public name: string) {
    super(new Date());
  }
}

